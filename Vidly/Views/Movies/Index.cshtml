@model IEnumerable<Vidly.Models.Movie>


@*
	TODO: 
		Add DataTables to this page
		Call the API using jQuery
		Add Edit and Delete buttons via javascript
		Add BootBox for delete confirmation
		Link edit button to /movies/edit/{id}
		optimize DataTables to delete from list AND db
		[] Use a DTO to return the Genre

*@

<h2>Movies</h2>

<p>
	@Html.ActionLink("New Movie", "New","Movies",
	null, new { @class="btn btn-primary mx-auto" })
</p>

<div>
	<table id="movies" class="table table-bordered table-hover">
		<thead>
		<tr>
			<th>Movie Title</th>
			<th>Genre</th>
			<th>In Stock</th>
			<th></th>
		</tr>
		</thead>
		<tbody>
		@*@foreach (var movie in Model)
			{
				<tr>
					<td>
						@movie.Name
					</td>
					<td>
						@movie.Genre.Name
					</td>
					<td>
						@Html.ActionLink("Edit", 
							"Edit", 
							"Movies", 
							new { id = movie.Id}, 
							new { @class="btn btn-secondary"})
					</td>

				</tr>
			}*@
		</tbody>
	</table>

</div>

@section scripts {
	<script>
		$(document).ready(function () {
			var table = $("#movies").DataTable({
				ajax: {
					url: "/api/movies",
					dataSrc: ""
				},
				columns: [
					{
						data: "name",

					},
					{
						data: "genre.name"
					},
					{
						data: "numberInStock"
					},
					{
						data: "id",
						render: function (data, type, movie) {
							return "<a href='/movies/edit/" + movie.id + "' class='btn btn-link'>" + "Edit" + "</a>" +
								"<button class='btn btn-link js-delete' data-movie-id=" + data + ">Delete</button>";
						}
					}
				]
			});

			$("#movies").on("click", ".js-delete", function () {
				var button = $(this);

				bootbox.confirm("Are you sure you want to delete this movie?", function (result) {
					if (result) {
						$.ajax({
							url: "/api/movie/" + button.attr("data-movie-id"),
							method: "DELETE",
							success: function () {
								table.row(button.parents("tr")).remove().draw();
							}
						});
					}
				});
			});

		});

	</script>
}